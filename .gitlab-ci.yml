# ----------------------------------------------------
# This section defines custom variables. 
# 
# Variable name         Definition
# ----------------------------------------------------
# anansi_python_env     Stores the path to the 
#                       directory that contains the Python 
#                       virtual environment.
#
# PIP_CACHE_DIR         pip's cache directory
# ----------------------------------------------------
variables:
    python_venv_dir: "anansi_python_env"
    NCP_TOP_LEVEL: "$CI_PROJECT_DIR" 

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# ----------------------------------------------------
# This section defines reusable configurations.
#
# ----------------------------------------------------

# This hidden template enables the Python virtual environment and modifies
# PYTHONPATH.
.enable-python-virtual-environment: &enable-python-virtual-environment
    - source anansi_python_env/bin/activate
    - export PYTHONPATH="${NCP_TOP_LEVEL}/bin/lib:${PYTHONPATH}"

# ----------------------------------------------------
# This section defines stages of the pipeline:
#
#   prerequisites : Installs all dependent software, libraries, etc. 
#   build : Builds all project binaries
#   test : Runs all project tests
#   deploy : Deploys all project software.
#
# The 'Prerequisites' stage installs and caches a python virtual environment
# and sphinx-doc.
# ----------------------------------------------------
stages:
    - prerequisites
    - build
    - test
    - deploy

# ----------------------------------------------------
# 'Prerequisites' stage jobs.
# ----------------------------------------------------

# This is a global cache. We need to cache pip's package cache and the
# Python virtual environment.
cache: &global_cache
    key: $CI_COMMIT_REF_SLUG
    paths:
        - .cache/pip
        - anansi_python_env/
    policy: pull-push

# This job installs a Python virtual environment.
install-python-virtual-environment:
    stage: prerequisites
    tags:
        - RuyLopez
    
    script:
        - echo 'This jobs builds the Python virtual environment.'
        - python3 -m venv anansi_python_env
        - source anansi_python_env/bin/activate
        - pip3 install -U sphinx
        - find . -name "sphinx-build"
        - find . -name "pip"
        - echo 'Python virtual environment successfully created.'
    

# ---------------------------------
# Jobs for the build stage.
# ---------------------------------

build-job: # This job runs in the build stage, which runs first.
    stage: build
    tags:
        - RuyLopez
    script:
        - echo "Compiling the code..."
        - find . -name "sphinx-build"
        - find . -name "pip"
        - echo "Compile complete."
        - sleep 10
    needs: ["install-python-virtual-environment"]

# ----------------------------------------------------
# Jobs for the test stage.
# ----------------------------------------------------
unit-test-job:   
    stage: test
    tags: 
        - RuyLopez
    script:
        - echo "Running unit tests..."
        - find . -name "sphinx-build"
        - find . -name "pip"
        - sleep 5
        - echo "Code coverage is 90%"

lint-test-job:   # This job also runs in the test stage.
    stage: test    # It can run at the same time as unit-test-job (in parallel).
    tags:
        - RuyLopez
    script:
        - echo "Linting code... This will take about 10 seconds."
        - find . -name "sphinx-build"
        - find . -name "pip"
        - sleep 5
        - echo "No lint issues found."

# ----------------------------------------------------
# Jobs for the deploy stage.
# ----------------------------------------------------

# This job deploys the project binaries.
deploy-job:
  stage: deploy
  tags:
    - RuyLopez
  script:
    - echo "Deploying application..."
    - find . -name "sphinx-build"
    - find . -name "pip"
    - echo "Application successfully deployed."

# This deploys the documentation.
pages : 
    stage : deploy
    tags :
        - RuyLopez
    cache:
        # Inherit global cache settings and override the policy.
        <<: *global_cache
        policy: pull
    artifacts:
        paths:
            - public
    before_script:
        - *enable-python-virtual-environment
    script :
        - echo "Deploying documentation ..."
        - $NCP_TOP_LEVEL/bin/build_documentation.sh --publish-mode gitlab-pages --doc-top-level ${NCP_TOP_LEVEL}/documentation 
        - echo "Documentation sucessfully deployed."
